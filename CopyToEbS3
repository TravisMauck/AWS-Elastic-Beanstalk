#!/bin/sh

# this script was copied from https://github.com/thekosmix and then modified to fit my needs 
# This script helps you to deploy a file from your test environment to your prod environment

echo "set fromname"
# Set the name of the deployement file you are copying into your deployment environment
FromName="wordpress-beanstalk.zip"

echo "set toname"
# adding date to war filename to identify when was this war deployed 
(some of you might say not needed, but I have an OCD of putting timestamp in almost everything 2016-03-08_11:56 IST :D )
myDate=`date +%Y-%m-%d_%H%M`
ToName=$myDate"_ROOT.zip"

echo "set versionlabel"
# versionaLabel: what changes are you deploying in this build (try to keep it short)
# eg: "image_path_fixed" "user_profile_functionality_added", etc
versionLabel="Verions_from_script"
if [ "$versionLabel" == "" ]; then
        echo "please_mention_a_comment_for_this_build_in_the_same_format_without_any_space"
        exit;
fi

case "$versionLabel" in
    *[[:space:]]*)
        echo "comment shouldn't contains any space" >&2
        exit 1
        ;;
esac

# the s3 bucket associated to your elastic beanstalk environment, where all the versions of builds are stored
# you can find it from S3 console, it will start with the name as below
s3=elasticbeanstalk-us-west-2-393699333984

# enter you application name found in elastic beanstalk
appName=tutorials

# enter your environment name found in elastic beanstalk
environmentName=Tutorials-env

# prod profile with which you have setup the AWS CLI
# aws configure --profile=prod
profile=prod

# copy war/build file from test folder to S3 bucket
# I dropped --profile from the command since it does not seem to work any longer
echo `date` copying $FromName to s3 bucket
aws s3 cp $FromName s3://$s3/$ToName

# first Elaastic Beanstalk needs to create the environment
# you can see that in Elastic Beanstalk's Application version tab
# I dropped --profile from the command since it does not seem to work any longer
echo `date` creating environment
aws elasticbeanstalk create-application-version --application-name $appName --version-label $versionLabel --source-bundle S3Bucket=$s3,S3Key=$ToName

# not going to deploy automatically - but using the following would do so
# now update/deploy to your Elastic Beanstalk environment
# echo `date` updating environment
# aws elasticbeanstalk update-environment --environment-name $environmentName --version-label $versionLabel --profile=$profile

echo `date` done...
